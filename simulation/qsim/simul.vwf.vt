// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "04/05/2017 08:50:59"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          mips_vhdl
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module mips_vhdl_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [31:0] entrada;
// wires                                               
wire [31:0] saida;

// assign statements (if any)                          
mips_vhdl i1 (
// port map - connection between master ports and signals/registers   
	.entrada(entrada),
	.saida(saida)
);
initial 
begin 
#1000000 $stop;
end 
// entrada[ 31 ]
initial
begin
	entrada[31] = 1'b1;
end 
// entrada[ 30 ]
initial
begin
	entrada[30] = 1'b1;
end 
// entrada[ 29 ]
initial
begin
	entrada[29] = 1'b1;
end 
// entrada[ 28 ]
initial
begin
	entrada[28] = 1'b1;
end 
// entrada[ 27 ]
initial
begin
	entrada[27] = 1'b1;
end 
// entrada[ 26 ]
initial
begin
	entrada[26] = 1'b1;
end 
// entrada[ 25 ]
initial
begin
	entrada[25] = 1'b1;
end 
// entrada[ 24 ]
initial
begin
	entrada[24] = 1'b1;
end 
// entrada[ 23 ]
initial
begin
	entrada[23] = 1'b1;
end 
// entrada[ 22 ]
initial
begin
	entrada[22] = 1'b1;
end 
// entrada[ 21 ]
initial
begin
	entrada[21] = 1'b1;
end 
// entrada[ 20 ]
initial
begin
	entrada[20] = 1'b1;
end 
// entrada[ 19 ]
initial
begin
	entrada[19] = 1'b1;
end 
// entrada[ 18 ]
initial
begin
	entrada[18] = 1'b1;
end 
// entrada[ 17 ]
initial
begin
	entrada[17] = 1'b1;
end 
// entrada[ 16 ]
initial
begin
	entrada[16] = 1'b1;
end 
// entrada[ 15 ]
initial
begin
	entrada[15] = 1'b1;
end 
// entrada[ 14 ]
initial
begin
	entrada[14] = 1'b1;
end 
// entrada[ 13 ]
initial
begin
	entrada[13] = 1'b1;
end 
// entrada[ 12 ]
initial
begin
	entrada[12] = 1'b1;
end 
// entrada[ 11 ]
initial
begin
	entrada[11] = 1'b1;
end 
// entrada[ 10 ]
initial
begin
	entrada[10] = 1'b1;
end 
// entrada[ 9 ]
initial
begin
	entrada[9] = 1'b1;
end 
// entrada[ 8 ]
initial
begin
	entrada[8] = 1'b1;
end 
// entrada[ 7 ]
initial
begin
	entrada[7] = 1'b1;
end 
// entrada[ 6 ]
initial
begin
	entrada[6] = 1'b1;
end 
// entrada[ 5 ]
initial
begin
	entrada[5] = 1'b1;
end 
// entrada[ 4 ]
initial
begin
	entrada[4] = 1'b1;
end 
// entrada[ 3 ]
initial
begin
	entrada[3] = 1'b1;
end 
// entrada[ 2 ]
initial
begin
	entrada[2] = 1'b1;
end 
// entrada[ 1 ]
initial
begin
	entrada[1] = 1'b1;
end 
// entrada[ 0 ]
initial
begin
	entrada[0] = 1'b1;
end 
endmodule

